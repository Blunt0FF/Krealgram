const { google } = require('googleapis');
const http = require('http');
const url = require('url');
const open = require('open');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ .env
require('dotenv').config();

const CLIENT_ID = process.env.GOOGLE_CLIENT_ID;
const CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;
const REDIRECT_URI = 'http://localhost:3000/auth/google/callback';

const oauth2Client = new google.auth.OAuth2(
  CLIENT_ID,
  CLIENT_SECRET,
  REDIRECT_URI
);

// Scopes –¥–ª—è Google Drive
const SCOPES = ['https://www.googleapis.com/auth/drive.file'];

// URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const authUrl = oauth2Client.generateAuthUrl({
  access_type: 'offline',
  scope: SCOPES,
  prompt: 'consent'
});

console.log('üîó –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
console.log(authUrl);

// –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è callback
const server = http.createServer(async (req, res) => {
  const reqUrl = url.parse(req.url, true);
  
  if (reqUrl.pathname === '/auth/google/callback') {
    const code = reqUrl.query.code;
    
    if (code) {
      try {
        const { tokens } = await oauth2Client.getToken(code);
        
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω refresh token:');
        console.log('GOOGLE_CLIENT_ID=' + CLIENT_ID);
        console.log('GOOGLE_CLIENT_SECRET=' + CLIENT_SECRET);
        console.log('GOOGLE_REFRESH_TOKEN=' + tokens.refresh_token);
        
        res.writeHead(200, { 'Content-Type': 'text/html' });
        res.end(`
          <h1>‚úÖ –£—Å–ø–µ—à–Ω–æ!</h1>
          <p>–¢–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å.</p>
          <p>–ú–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ –æ–∫–Ω–æ.</p>
        `);
        
        server.close();
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:', error);
        res.writeHead(500, { 'Content-Type': 'text/html' });
        res.end('<h1>‚ùå –û—à–∏–±–∫–∞</h1>');
      }
    } else {
      res.writeHead(400, { 'Content-Type': 'text/html' });
      res.end('<h1>‚ùå –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>');
    }
  }
});

server.listen(3000, () => {
  console.log('üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000');
  console.log('üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ CLIENT_ID –∏ CLIENT_SECRET –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞');
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
  setTimeout(() => {
    open(authUrl);
  }, 1000);
}); 