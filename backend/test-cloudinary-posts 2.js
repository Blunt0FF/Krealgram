const mongoose = require('mongoose');
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
const Post = require('./models/postModel');
const User = require('./models/userModel');
const Conversation = require('./models/conversationModel');

async function testCloudinaryPosts() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã —Å Cloudinary...');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || process.env.MONGO_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ MongoDB');
    
    // –ò—â–µ–º –ø–æ—Å—Ç—ã —Å Cloudinary
    const posts = await Post.find({
      $or: [
        { image: { $regex: 'cloudinary.com' } },
        { thumbnailUrl: { $regex: 'cloudinary.com' } },
        { gifPreview: { $regex: 'cloudinary.com' } }
      ]
    });
    
    console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ ${posts.length} –ø–æ—Å—Ç–æ–≤ —Å Cloudinary:`);
    
    posts.forEach((post, index) => {
      console.log(`\n--- –ü–æ—Å—Ç ${index + 1} ---`);
      console.log(`ID: ${post._id}`);
      console.log(`–ê–≤—Ç–æ—Ä: ${post.author}`);
      console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${post.image}`);
      if (post.thumbnailUrl) console.log(`–ü—Ä–µ–≤—å—é: ${post.thumbnailUrl}`);
      if (post.gifPreview) console.log(`GIF –ø—Ä–µ–≤—å—é: ${post.gifPreview}`);
      console.log(`–¢–∏–ø –º–µ–¥–∏–∞: ${post.mediaType}`);
      console.log(`–ü–æ–¥–ø–∏—Å—å: ${post.caption || '–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∏'}`);
    });
    
    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Cloudinary –∞–≤–∞—Ç–∞—Ä–∞–º–∏
    const users = await User.find({
      avatar: { $regex: 'cloudinary.com' }
    });
    
    console.log(`\nüë§ –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Cloudinary –∞–≤–∞—Ç–∞—Ä–∞–º–∏:`);
    
    users.forEach((user, index) => {
      console.log(`${index + 1}. ${user.username} - ${user.avatar}`);
    });
    
    // –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å Cloudinary –º–µ–¥–∏–∞
    const conversations = await Conversation.find({
      'messages.media.url': { $regex: 'cloudinary.com' }
    });
    
    console.log(`\nüí¨ –ù–∞–π–¥–µ–Ω–æ ${conversations.length} –±–µ—Å–µ–¥ —Å Cloudinary –º–µ–¥–∏–∞`);
    
    let messageCount = 0;
    conversations.forEach(conversation => {
      conversation.messages.forEach(message => {
        if (message.media && message.media.url && message.media.url.includes('cloudinary.com')) {
          messageCount++;
        }
      });
    });
    
    console.log(`üìù –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å Cloudinary –º–µ–¥–∏–∞: ${messageCount}`);
    
    console.log('\nüéØ –ò—Ç–æ–≥–æ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏:');
    console.log(`   - –ü–æ—Å—Ç–æ–≤: ${posts.length}`);
    console.log(`   - –ê–≤–∞—Ç–∞—Ä–æ–≤: ${users.length}`);
    console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–π: ${messageCount}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    mongoose.connection.close();
  }
}

testCloudinaryPosts(); 