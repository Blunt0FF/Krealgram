const mongoose = require('mongoose');
const axios = require('axios');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
const Post = require('./models/postModel');
const User = require('./models/userModel');
const Conversation = require('./models/conversationModel');

async function migrateOnRender() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ Render...');
  
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || process.env.MONGO_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ MongoDB');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã —Å Cloudinary
    const posts = await Post.find({
      $or: [
        { image: { $regex: 'cloudinary.com' } },
        { thumbnailUrl: { $regex: 'cloudinary.com' } },
        { gifPreview: { $regex: 'cloudinary.com' } }
      ]
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${posts.length} –ø–æ—Å—Ç–æ–≤ —Å Cloudinary`);
    
    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞ –∑–∞–º–µ–Ω—è–µ–º Cloudinary URL –Ω–∞ placeholder
    let updated = 0;
    for (const post of posts) {
      let changed = false;
      
      if (post.image && post.image.includes('cloudinary.com')) {
        // –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ placeholder –¥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Drive
        post.image = '/api/placeholder/image/' + post._id;
        changed = true;
      }
      
      if (post.thumbnailUrl && post.thumbnailUrl.includes('cloudinary.com')) {
        post.thumbnailUrl = '/api/placeholder/thumbnail/' + post._id;
        changed = true;
      }
      
      if (post.gifPreview && post.gifPreview.includes('cloudinary.com')) {
        post.gifPreview = '/api/placeholder/gif/' + post._id;
        changed = true;
      }
      
      if (changed) {
        await post.save();
        updated++;
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å—Ç ${post._id}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.find({
      avatar: { $regex: 'cloudinary.com' }
    });
    
    console.log(`üë§ –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Cloudinary –∞–≤–∞—Ç–∞—Ä–∞–º–∏`);
    
    let usersUpdated = 0;
    for (const user of users) {
      if (user.avatar && user.avatar.includes('cloudinary.com')) {
        user.avatar = '/api/placeholder/avatar/' + user._id;
        await user.save();
        usersUpdated++;
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.username}`);
      }
    }
    
    console.log(`\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –ü–æ—Å—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${updated}`);
    console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${usersUpdated}`);
    console.log(`\nüí° –í—Å–µ Cloudinary URL –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ placeholder'—ã`);
    console.log(`üí° –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google Drive –¥–ª—è –ø–æ–ª–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  } finally {
    mongoose.connection.close();
  }
}

migrateOnRender(); 