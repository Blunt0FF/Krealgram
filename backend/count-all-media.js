require('dotenv').config();
const mongoose = require('mongoose');
const Post = require('./models/postModel');
const User = require('./models/userModel');
const Conversation = require('./models/conversationModel');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
const connectDB = async () => {
  try {
    const mongoURI = process.env.MONGODB_URI || process.env.MONGO_URI || 'mongodb+srv://admin:2282281488Kk@study.flfhk.mongodb.net/krealgram';
    await mongoose.connect(mongoURI);
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

const countAllMedia = async () => {
  try {
    await connectDB();
    
    console.log('\nüîç –ü–û–î–°–ß–ï–¢ –í–°–ï–• –ú–ï–î–ò–ê –§–ê–ô–õ–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:\n');
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
    const totalPosts = await Post.countDocuments();
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalPosts}`);
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã —Å –º–µ–¥–∏–∞
    const postsWithMedia = await Post.find({
      $or: [
        { media: { $exists: true, $ne: null, $ne: '' } },
        { image: { $exists: true, $ne: null, $ne: '' } },
        { video: { $exists: true, $ne: null, $ne: '' } },
        { gif: { $exists: true, $ne: null, $ne: '' } }
      ]
    });
    
    console.log(`üì∑ –ü–æ—Å—Ç–æ–≤ —Å –º–µ–¥–∏–∞: ${postsWithMedia.length}`);
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã —Å Cloudinary
    const cloudinaryPosts = await Post.find({
      $or: [
        { media: { $regex: /cloudinary\.com/i } },
        { image: { $regex: /cloudinary\.com/i } },
        { video: { $regex: /cloudinary\.com/i } },
        { gif: { $regex: /cloudinary\.com/i } }
      ]
    });
    
    console.log(`‚òÅÔ∏è –ü–æ—Å—Ç–æ–≤ —Å Cloudinary: ${cloudinaryPosts.length}`);
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã —Å res.cloudinary.com
    const resCloudinaryPosts = await Post.find({
      $or: [
        { media: { $regex: /res\.cloudinary\.com/i } },
        { image: { $regex: /res\.cloudinary\.com/i } },
        { video: { $regex: /res\.cloudinary\.com/i } },
        { gif: { $regex: /res\.cloudinary\.com/i } }
      ]
    });
    
    console.log(`üåê –ü–æ—Å—Ç–æ–≤ —Å res.cloudinary.com: ${resCloudinaryPosts.length}`);
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã —Å Google Drive
    const drivePosts = await Post.find({
      $or: [
        { media: { $regex: /drive\.google\.com/i } },
        { image: { $regex: /drive\.google\.com/i } },
        { video: { $regex: /drive\.google\.com/i } },
        { gif: { $regex: /drive\.google\.com/i } }
      ]
    });
    
    console.log(`üöó –ü–æ—Å—Ç–æ–≤ —Å Google Drive: ${drivePosts.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–≤–∞—Ç–∞—Ä–∞–º–∏
    const usersWithAvatars = await User.find({
      avatar: { $exists: true, $ne: null, $ne: '' }
    });
    
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–≤–∞—Ç–∞—Ä–∞–º–∏: ${usersWithAvatars.length}`);
    
    const usersWithCloudinaryAvatars = await User.find({
      avatar: { $regex: /cloudinary\.com/i }
    });
    
    console.log(`‚òÅÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Cloudinary –∞–≤–∞—Ç–∞—Ä–∞–º–∏: ${usersWithCloudinaryAvatars.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–¥–∏–∞
    const conversationsWithMedia = await Conversation.find({
      'messages.media': { $exists: true, $ne: null, $ne: '' }
    });
    
    console.log(`üí¨ –î–∏–∞–ª–æ–≥–æ–≤ —Å –º–µ–¥–∏–∞: ${conversationsWithMedia.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç–æ–≤ —Å –º–µ–¥–∏–∞
    console.log('\nüìã –ü–†–ò–ú–ï–†–´ –ü–û–°–¢–û–í –° –ú–ï–î–ò–ê:');
    
    const samplePosts = await Post.find({
      $or: [
        { media: { $exists: true, $ne: null, $ne: '' } },
        { image: { $exists: true, $ne: null, $ne: '' } },
        { video: { $exists: true, $ne: null, $ne: '' } },
        { gif: { $exists: true, $ne: null, $ne: '' } }
      ]
    }).limit(10);
    
    samplePosts.forEach((post, index) => {
      console.log(`\n${index + 1}. ID: ${post._id}`);
      console.log(`   –ö–æ–Ω—Ç–µ–Ω—Ç: ${post.content || '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞'}`);
      console.log(`   –ú–µ–¥–∏–∞: ${post.media || '–ù–µ—Ç'}`);
      console.log(`   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${post.image || '–ù–µ—Ç'}`);
      console.log(`   –í–∏–¥–µ–æ: ${post.video || '–ù–µ—Ç'}`);
      console.log(`   GIF: ${post.gif || '–ù–µ—Ç'}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${post.createdAt}`);
    });
    
    console.log('\n‚úÖ –ü–û–î–°–ß–ï–¢ –ó–ê–í–ï–†–®–ï–ù!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –º–µ–¥–∏–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç MongoDB');
  }
};

countAllMedia(); 