const { cloudinary } = require('../config/cloudinary');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ URL –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞
const getMediaUrl = (imagePath, type = 'image') => {
  if (!imagePath) return null;
  
  // –ï—Å–ª–∏ —É–∂–µ –ø–æ–ª–Ω—ã–π URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (imagePath.startsWith('http')) {
    return imagePath;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ Cloudinary
  if (process.env.USE_CLOUDINARY === 'true' && cloudinary) {
    // –î–ª—è Cloudinary –∏–∑–≤–ª–µ–∫–∞–µ–º public_id –∏–∑ –ø—É—Ç–∏
    let publicId = imagePath;
    
    // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/\.[^/.]+$/, '');
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å uploads/ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/^uploads\//, '');
    
    // –î–ª—è –≤–∏–¥–µ–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º video resource type
    if (type === 'video') {
      return cloudinary.url(publicId, {
        resource_type: 'video',
        fetch_format: 'auto',
        quality: 'auto',
        flags: 'progressive',
        transformation: [
          { quality: 'auto:good', format: 'auto' }
        ]
      });
    }
    
    // –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è GIF —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π)
    return cloudinary.url(publicId, {
      fetch_format: 'auto',
      quality: '100', // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
      flags: 'progressive,animated,immutable_cache,lossy', // –î–æ–±–∞–≤–ª—è–µ–º lossy –¥–ª—è –ª—É—á—à–µ–≥–æ —Å–∂–∞—Ç–∏—è –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ FPS
      transformation: [
        { 
          quality: '100',
          format: 'auto' // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
        }
      ]
    });
  }
  
  // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  return `/uploads/${imagePath}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –ø—Ä–µ–≤—å—é –≤–∏–¥–µ–æ
const getVideoThumbnailUrl = (imagePath) => {
  if (!imagePath) return null;
  
  // –ï—Å–ª–∏ —É–∂–µ –ø–æ–ª–Ω—ã–π URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (imagePath.startsWith('http')) {
    return imagePath;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ Cloudinary
  if (process.env.USE_CLOUDINARY === 'true' && cloudinary) {
    // –î–ª—è Cloudinary –∏–∑–≤–ª–µ–∫–∞–µ–º public_id –∏–∑ –ø—É—Ç–∏
    let publicId = imagePath;
    
    // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/\.[^/.]+$/, '');
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å uploads/ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/^uploads\//, '');
    
    // –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–≤—å—é
    // –í–∞—Ä–∏–∞–Ω—Ç 1: –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª, —Å–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é
    try {
      return cloudinary.url(publicId, {
        resource_type: 'video',
        format: 'jpg',
        transformation: [
          { width: 600, height: 600, crop: 'fill', gravity: 'center', quality: 'auto' }
        ],
        flags: 'progressive'
      });
    } catch (error) {
      console.log('Failed to create video thumbnail, trying as image:', error);
      
      // –í–∞—Ä–∏–∞–Ω—Ç 2: –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∫–∞–∫ –≤–∏–¥–µ–æ, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      try {
        return cloudinary.url(publicId, {
          resource_type: 'image',
          format: 'jpg',
          transformation: [
            { width: 600, height: 600, crop: 'fill', gravity: 'center', quality: 'auto' }
          ],
          flags: 'progressive'
        });
      } catch (imageError) {
        console.log('Failed to create image thumbnail:', imageError);
        
        // –í–∞—Ä–∏–∞–Ω—Ç 3: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        return cloudinary.url(publicId, {
          resource_type: 'auto',
          fetch_format: 'auto',
          quality: 'auto'
        });
      }
    }
  }
  
  // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  return `/uploads/${imagePath}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é (–º–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä, –±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
const getMobileThumbnailUrl = (imagePath) => {
  if (!imagePath) return null;
  
  // –ï—Å–ª–∏ —É–∂–µ –ø–æ–ª–Ω—ã–π URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (imagePath.startsWith('http')) {
    return imagePath;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ Cloudinary
  if (process.env.USE_CLOUDINARY === 'true' && cloudinary) {
    // –î–ª—è Cloudinary –∏–∑–≤–ª–µ–∫–∞–µ–º public_id –∏–∑ –ø—É—Ç–∏
    let publicId = imagePath;
    
    // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/\.[^/.]+$/, '');
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å uploads/ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/^uploads\//, '');
    
    // –°–æ–∑–¥–∞–µ–º –º–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–µ–≤—å—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    return cloudinary.url(publicId, {
      resource_type: 'auto',
      format: 'webp',
      transformation: [
        { 
          width: 300, 
          height: 300, 
          crop: 'fill', 
          gravity: 'center',
          quality: 'auto:low',
          dpr: 'auto'
        }
      ],
      flags: 'progressive'
    });
  }
  
  // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  return `/uploads/${imagePath}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é —Å fallback –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
const getReliableThumbnailUrl = (imagePath) => {
  if (!imagePath) return null;
  
  // –ï—Å–ª–∏ —É–∂–µ –ø–æ–ª–Ω—ã–π URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (imagePath.startsWith('http')) {
    return imagePath;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ Cloudinary
  if (process.env.USE_CLOUDINARY === 'true' && cloudinary) {
    // –î–ª—è Cloudinary –∏–∑–≤–ª–µ–∫–∞–µ–º public_id –∏–∑ –ø—É—Ç–∏
    let publicId = imagePath;
    
    // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/\.[^/.]+$/, '');
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å uploads/ –µ—Å–ª–∏ –µ—Å—Ç—å
    publicId = publicId.replace(/^uploads\//, '');
    
    console.log('üîç Creating reliable thumbnail for:', publicId);
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ URL –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏
    const thumbnailVariants = [
      // –í–∞—Ä–∏–∞–Ω—Ç 1: –í–∏–¥–µ–æ –ø—Ä–µ–≤—å—é
      () => cloudinary.url(publicId, {
        resource_type: 'video',
        format: 'jpg',
        transformation: [
          { width: 400, height: 400, crop: 'fill', gravity: 'center', quality: 'auto' }
        ],
        flags: 'progressive'
      }),
      
      // –í–∞—Ä–∏–∞–Ω—Ç 2: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      () => cloudinary.url(publicId, {
        resource_type: 'image',
        format: 'jpg',
        transformation: [
          { width: 400, height: 400, crop: 'fill', gravity: 'center', quality: 'auto' }
        ],
        flags: 'progressive'
      }),
      
      // –í–∞—Ä–∏–∞–Ω—Ç 3: –ê–≤—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞
      () => cloudinary.url(publicId, {
        resource_type: 'auto',
        format: 'jpg',
        transformation: [
          { width: 400, height: 400, crop: 'fill', gravity: 'center', quality: 'auto' }
        ],
        flags: 'progressive'
      }),
      
      // –í–∞—Ä–∏–∞–Ω—Ç 4: –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –±–µ–∑ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
      () => cloudinary.url(publicId, {
        resource_type: 'auto',
        format: 'auto',
        quality: 'auto'
      }),
      
      // –í–∞—Ä–∏–∞–Ω—Ç 5: Raw —Ñ–∞–π–ª
      () => cloudinary.url(publicId, {
        resource_type: 'raw'
      })
    ];
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏)
    try {
      const thumbnailUrl = thumbnailVariants[0]();
      console.log('‚úÖ Generated thumbnail URL:', thumbnailUrl);
      return thumbnailUrl;
    } catch (error) {
      console.log('‚ùå Failed to generate thumbnail, trying fallback:', error);
      return thumbnailVariants[3](); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    }
  }
  
  // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  return `/uploads/${imagePath}`;
};

module.exports = {
  getMediaUrl,
  getVideoThumbnailUrl,
  getMobileThumbnailUrl,
  getReliableThumbnailUrl
}; 

