const fs = require('fs').promises;
const path = require('path');

class EmailTemplateManager {
  constructor() {
    this.templatesDir = path.join(__dirname, '../email-templates');
    this.cache = new Map();
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç HTML —à–∞–±–ª–æ–Ω –∏–∑ —Ñ–∞–π–ª–∞
   * @param {string} templateName - –∏–º—è —Ñ–∞–π–ª–∞ —à–∞–±–ª–æ–Ω–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
   * @returns {Promise<string>} —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ HTML —à–∞–±–ª–æ–Ω–∞
   */
  async loadTemplate(templateName) {
    if (this.cache.has(templateName)) {
      return this.cache.get(templateName);
    }

    try {
      const templatePath = path.join(this.templatesDir, `${templateName}.html`);
      const template = await fs.readFile(templatePath, 'utf8');
      this.cache.set(templateName, template);
      return template;
    } catch (error) {
      console.error(`Error loading email template ${templateName}:`, error);
      throw new Error(`Template ${templateName} not found`);
    }
  }

  /**
   * –†–µ–Ω–¥–µ—Ä–∏—Ç HTML —à–∞–±–ª–æ–Ω —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
   * @param {string} templateName - –∏–º—è —à–∞–±–ª–æ–Ω–∞
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —à–∞–±–ª–æ–Ω
   * @returns {Promise<string>} –≥–æ—Ç–æ–≤—ã–π HTML
   */
  async renderTemplate(templateName, data) {
    let template = await this.loadTemplate(templateName);
    
    console.log('üìß Rendering template with data:', JSON.stringify(data, null, 2));
    
    // –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ª–æ–≤–Ω—ã–µ –±–ª–æ–∫–∏
    template = this.processConditionalBlocks(template, data);
    
    // –ó–∞—Ç–µ–º –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    template = this.processVariables(template, data);
    
    console.log('üìß Final rendered template length:', template.length);
    
    return template;
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å–ª–æ–≤–Ω—ã–µ –±–ª–æ–∫–∏ –≤ —à–∞–±–ª–æ–Ω–µ
   * @param {string} template - –∏—Å—Ö–æ–¥–Ω—ã–π —à–∞–±–ª–æ–Ω
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ
   * @returns {string} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
   */
  processConditionalBlocks(template, data) {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–Ω—ã–µ –±–ª–æ–∫–∏
    let processed = template;
    let maxIterations = 10; // –ó–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    
    while (maxIterations > 0 && (processed.includes('{{#if') || processed.includes('{{#unless'))) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {{#if nested.field}}...{{/if}} (—Å–Ω–∞—á–∞–ª–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ)
      processed = processed.replace(/\{\{#if\s+(\w+)\.(\w+)\}\}([\s\S]*?)\{\{\/if\}\}/g, (match, object, field, content) => {
        const value = (data[object] && data[object][field]) ? data[object][field] : null;
        console.log(`üìß Condition "if ${object}.${field}":`, value);
        return value ? content : '';
      });
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {{#unless nested.field}}...{{/unless}} (—Å–Ω–∞—á–∞–ª–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ)
      processed = processed.replace(/\{\{#unless\s+(\w+)\.(\w+)\}\}([\s\S]*?)\{\{\/unless\}\}/g, (match, object, field, content) => {
        const value = (data[object] && data[object][field]) ? data[object][field] : null;
        console.log(`üìß Condition "unless ${object}.${field}":`, value);
        return !value ? content : '';
      });
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {{#if condition}}...{{/if}} (–ø—Ä–æ—Å—Ç—ã–µ)
      processed = processed.replace(/\{\{#if\s+(\w+)\}\}([\s\S]*?)\{\{\/if\}\}/g, (match, condition, content) => {
        const value = data[condition];
        console.log(`üìß Condition "if ${condition}":`, value);
        return value ? content : '';
      });
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {{#unless condition}}...{{/unless}} (–ø—Ä–æ—Å—Ç—ã–µ)
      processed = processed.replace(/\{\{#unless\s+(\w+)\}\}([\s\S]*?)\{\{\/unless\}\}/g, (match, condition, content) => {
        const value = data[condition];
        console.log(`üìß Condition "unless ${condition}":`, value);
        return !value ? content : '';
      });
      
      maxIterations--;
    }
    
    return processed;
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω–µ
   * @param {string} template - –∏—Å—Ö–æ–¥–Ω—ã–π —à–∞–±–ª–æ–Ω
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ
   * @returns {string} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
   */
  processVariables(template, data) {
    // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ {{variable}}
    let processed = template.replace(/\{\{(\w+)\}\}/g, (match, key) => {
      const value = data[key];
      console.log(`üìß Variable "${key}":`, value);
      return value || '';
    });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è sharedPost
    processed = processed.replace(/\{\{sharedPost\.(\w+)\}\}/g, (match, field) => {
      const value = (data.sharedPost && data.sharedPost[field]) ? data.sharedPost[field] : '';
      console.log(`üìß Nested variable "sharedPost.${field}":`, value);
      return value;
    });
    
    return processed;
  }

  /**
   * –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
   * @param {Object} message - –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {Object} sender - –æ–±—ä–µ–∫—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
   * @param {Object} recipient - –æ–±—ä–µ–∫—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è
   * @returns {Object} –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
   */
  prepareMessageNotificationData(message, sender, recipient) {
    const data = {
      senderName: sender.username || 'Unknown User',
      senderAvatar: sender.avatar || 'https://krealgram.com/default-avatar.png',
      messageText: message.text || '',
      hasMedia: !!(message.media && message.media.url),
      sharedPost: null,
      mediaImage: null,
      appUrl: process.env.FRONTEND_URL || 'https://krealgram.com',
      timestamp: new Date().toLocaleString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })
    };

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–µ–¥–∏–∞ –≤–ª–æ–∂–µ–Ω–∏—è
    if (message.media && message.media.url) {
      if (message.media.type === 'image') {
        data.mediaImage = this.getProxiedImageUrl(message.media.url);
      }
      data.hasMedia = true;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º mediaImage –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ—Ç–¥–µ–ª—å–Ω–æ
    if (message.mediaImage) {
      data.mediaImage = this.getProxiedImageUrl(message.mediaImage);
      data.hasMedia = true;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π –ø–æ—Å—Ç
    if (message.sharedPost) {
      try {
        const post = typeof message.sharedPost === 'string' 
          ? JSON.parse(message.sharedPost) 
          : message.sharedPost;

        data.sharedPost = {
          image: this.getProxiedImageUrl(post.image || post.imageUrl || post.thumbnailUrl),
          gif: this.getProxiedImageUrl(post.gif || post.gifUrl || post.gifPreview),
          caption: post.caption || '',
          author: post.author || 'Unknown'
        };
        
        console.log('üìß Template shared post data:', {
          image: data.sharedPost.image,
          gif: data.sharedPost.gif,
          caption: data.sharedPost.caption,
          author: data.sharedPost.author
        });
      } catch (error) {
        console.error('Error parsing shared post:', error);
      }
    }

    console.log('üìß Final template data:', {
      hasText: !!data.messageText,
      hasMedia: data.hasMedia,
      mediaImage: data.mediaImage,
      hasSharedPost: !!data.sharedPost,
      sharedPostImage: data.sharedPost?.image,
      sharedPostGif: data.sharedPost?.gif
    });

    return data;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–µ–≤—å—é —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–±—Ä–µ–∑–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç)
   * @param {string} text - –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @param {number} maxLength - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞
   * @returns {string} –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   */
  truncateText(text, maxLength = 100) {
    if (!text || text.length <= maxLength) return text;
    return text.substring(0, maxLength) + '...';
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è email (–ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç —á–µ—Ä–µ–∑ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä)
   * @param {string} originalUrl - –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL
   * @returns {string} –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL
   */
  getProxiedImageUrl(originalUrl) {
    if (!originalUrl) return '';
    
    // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –Ω–∞—à –ø—Ä–æ–∫—Å–∏ URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    if (originalUrl.includes('/api/proxy-drive/')) {
      return originalUrl;
    }

    // –ï—Å–ª–∏ —ç—Ç–æ Google Drive URL, –ø—Ä–æ–∫—Å–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä
    if (originalUrl.includes('drive.google.com')) {
      const fileId = this.extractGoogleDriveId(originalUrl);
      if (fileId) {
        const backendUrl = 'https://krealgram-backend.onrender.com';
        console.log(`üìß Proxying image: ${originalUrl} -> ${backendUrl}/api/proxy-drive/${fileId}?type=image`);
        return `${backendUrl}/api/proxy-drive/${fileId}?type=image`;
      }
    }

    return originalUrl;
  }

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç ID —Ñ–∞–π–ª–∞ –∏–∑ Google Drive URL
   * @param {string} url - Google Drive URL
   * @returns {string|null} ID —Ñ–∞–π–ª–∞
   */
  extractGoogleDriveId(url) {
    const patterns = [
      /\/file\/d\/([a-zA-Z0-9-_]+)/,
      /id=([a-zA-Z0-9-_]+)/,
      /\/uc\?id=([a-zA-Z0-9-_]+)/
    ];

    for (const pattern of patterns) {
      const match = url.match(pattern);
      if (match) return match[1];
    }

    return null;
  }
}

module.exports = new EmailTemplateManager(); 