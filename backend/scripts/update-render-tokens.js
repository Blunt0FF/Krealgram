#!/usr/bin/env node

require('dotenv').config();
const axios = require('axios');
const { OAuth2Client } = require('google-auth-library');

const RENDER_API_KEY = process.env.RENDER_API_KEY;
const RENDER_SERVICE_ID = process.env.RENDER_SERVICE_ID;

async function updateRenderTokens() {
  if (!RENDER_API_KEY || !RENDER_SERVICE_ID) {
    console.error('‚ùå RENDER_API_KEY –∏–ª–∏ RENDER_SERVICE_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    return;
  }

  console.log('üîß –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã Google Drive –≤ Render...');

  try {
    // –°–æ–∑–¥–∞–µ–º OAuth2 –∫–ª–∏–µ–Ω—Ç
    const oauth2Client = new OAuth2Client(
      process.env.GOOGLE_CLIENT_ID,
      process.env.GOOGLE_CLIENT_SECRET
    );

    // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π refresh token
    console.log('üîÑ –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π refresh token...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π refresh token –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ
    oauth2Client.setCredentials({
      refresh_token: process.env.GOOGLE_DRIVE_REFRESH_TOKEN
    });

    // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å access token
    const { credentials } = await oauth2Client.refreshAccessToken();
    
    const newRefreshToken = credentials.refresh_token || process.env.GOOGLE_DRIVE_REFRESH_TOKEN;
    const newAccessToken = credentials.access_token;

    console.log('‚úÖ –ù–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã –≤ Render
    const updateResponse = await axios.put(
      `https://api.render.com/v1/services/${RENDER_SERVICE_ID}/env-vars`,
      [
        {
          key: 'GOOGLE_DRIVE_REFRESH_TOKEN',
          value: newRefreshToken
        },
        {
          key: 'GOOGLE_DRIVE_ACCESS_TOKEN',
          value: newAccessToken
        }
      ],
      {
        headers: {
          'Authorization': `Bearer ${RENDER_API_KEY}`,
          'Content-Type': 'application/json'
        }
      }
    );

    console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Render');
    console.log('üìã –û—Ç–≤–µ—Ç API:', updateResponse.status);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –¥–µ–ø–ª–æ–π
    const deployResponse = await axios.post(
      `https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys`,
      {},
      {
        headers: {
          'Authorization': `Bearer ${RENDER_API_KEY}`,
          'Content-Type': 'application/json'
        }
      }
    );

    console.log('üöÄ –ù–æ–≤—ã–π –¥–µ–ø–ª–æ–π –∑–∞–ø—É—â–µ–Ω');
    console.log('üìã Deploy ID:', deployResponse.data.id);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    
    if (error.message.includes('invalid_grant')) {
      console.log('üí° –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π refresh token –≤—Ä—É—á–Ω—É—é');
      console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node get-new-token.js');
    }
  }
}

updateRenderTokens(); 