// config.js

export const REMOTE_URL = import.meta.env.VITE_API_URL || 'https://krealgram-backend.onrender.com';
export const LOCAL_URL = 'http://localhost:3000';

export let API_URL = REMOTE_URL;
export let SOCKET_URL = import.meta.env.VITE_SOCKET_URL || `wss://${REMOTE_URL.split('://')[1]}`;

export function setApiUrl(url) {
  console.log('[CONFIG] Setting API_URL:', url);
  API_URL = url || REMOTE_URL;
  window.API_URL = API_URL;
}

export async function checkAndSetApiUrl() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–æ—Å—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã
  const hostname = window.location.hostname;
  const isLocalhost = ['localhost', '127.0.0.1'].includes(hostname);
  
  // –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
  const allowedDomains = [
    'krealgram.com', 
    'krealgram.vercel.app'
  ];

  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  console.group('üåê API URL Configuration');
  console.log('Current Hostname:', hostname);
  console.log('Is Localhost:', isLocalhost);
  console.log('Allowed Domains:', allowedDomains);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω
  const isDomainAllowed = allowedDomains.some(domain => hostname.includes(domain));

  if (!isDomainAllowed) {
    console.warn(`[CONFIG] –î–æ–º–µ–Ω ${hostname} –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π URL.`);
    console.log('Fallback URL:', REMOTE_URL);
    setApiUrl(REMOTE_URL);
    console.groupEnd();
    return;
  }
  
  // –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –±—ç–∫–µ–Ω–¥
  if (isLocalhost) {
    try {
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 1500);

      console.log('Attempting to reach local server:', LOCAL_URL);

      const response = await fetch(`${LOCAL_URL}/api/auth/ping`, {
        method: 'GET',
        signal: controller.signal,
        headers: {
          'Origin': window.location.origin
        }
      });

      console.log('Local server ping response:', {
        status: response.status,
        ok: response.ok,
        headers: Object.fromEntries(response.headers.entries())
      });

      if (response.ok) {
        console.log('[CONFIG] Local server reachable, using LOCAL_URL');
        setApiUrl(LOCAL_URL);
        SOCKET_URL = `ws://${LOCAL_URL.split('://')[1]}`;
        console.groupEnd();
        return;
      }
    } catch (error) {
      console.warn('[CONFIG] Local server not available', error);
    }
  }

  // –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π –±—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ —ç—Ç–æ –Ω–µ –ª–æ–∫–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π
  console.log('[CONFIG] Using REMOTE_URL');
  setApiUrl(REMOTE_URL);
  SOCKET_URL = `wss://${REMOTE_URL.split('://')[1]}`;
  console.groupEnd();
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –¥–æ–º–µ–Ω–∞
export function getCurrentDomain() {
  const hostname = window.location.hostname;
  const allowedDomains = {
    'krealgram.com': 'krealgram.com',
    'krealgram.vercel.app': 'krealgram.vercel.app'
  };

  return allowedDomains[hostname] || hostname;
}